<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Learning with Omar on Learning With Omar</title>
    <link>https://omar2cloud.github.io/</link>
    <description>Recent content in Learning with Omar on Learning With Omar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Jun 2020 13:31:12 +0100</lastBuildDate><atom:link href="https://omar2cloud.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Create a Free Domain Name</title>
      <link>https://omar2cloud.github.io/cloudflare/domain/domain/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/cloudflare/domain/domain/</guid>
      <description>Tutorial Scenario:  Register a free domain at Freenom Signup for a free account at Cloudflare Add a site to Cloudflare  Step 1: Register a free domain at Freenom:  Navigate to Freenom and create a free account. Select Register a New Domain as show below.  Check the availability of a domain name of your choice. In my case, it&amp;rsquo;s mytunnel. Then, select the free domain TDL  Choose the Period for your selected domain.</description>
    </item>
    
    <item>
      <title>My First Raspberry Pi</title>
      <link>https://omar2cloud.github.io/rasp/myrasp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/rasp/myrasp/</guid>
      <description>What is Raspberry Pi (RPI)? The Raspberry Pi is a small single-board computer capable of doing almost everything that an ordinary Linux-based computer can do. Once it connects to an HDMI display, a keyboard, and a mouse, we have have a fully functional computer for a pice of $35 (or even way less for the Raspberry Pi Zero). The Raspberry Pi is widely known and used for home lab environments, where anyone can experiment safely.</description>
    </item>
    
    <item>
      <title>Create a Free Cloudflare Tunnel</title>
      <link>https://omar2cloud.github.io/cloudflare/cloudflared/cloudflare/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/cloudflare/cloudflared/cloudflare/</guid>
      <description>Tutorial Scenario:  Signup for a free Cloudflare for Teams. Install and authenticate cloudflared on a Raspberry Pi 4. Create a Cloudflare Tunnel. Configure the Tunnel details. Create DNS records to route traffic to the Tunnel. Run and manage the Tunnel. Add a Zero Trust policy. Run Tunnel as a service.  Step 1: Signup for a free Cloudflare for Teams: Navigate to Cloudflare for Teams and signup for a free account.</description>
    </item>
    
    <item>
      <title>How to Remote into Ubuntu</title>
      <link>https://omar2cloud.github.io/rasp/vino/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/rasp/vino/</guid>
      <description>What is a Virtual Network Computing (VNC)? VNC is a graphical desktop sharing system that allows you to remotely control the desktop interface from another computer or mobile device (running VNC Viewer). VNC Viewer transmits the keyboard and the mouse events to VNC Server, and receives updates to the screen in return. Setting up a VNC Server on our RPI 4 is very beneficial to gain access to it from another device.</description>
    </item>
    
    <item>
      <title>Install Docker and Portainer on Ubuntu Instance</title>
      <link>https://omar2cloud.github.io/aws/portainer/portainer/portainer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/aws/portainer/portainer/portainer/</guid>
      <description>What is Portainer? Portainer is the definitive open source container management tool for Kubernetes, Docker, Docker Swarm and Azure ACI. It allows anyone to deploy and manage containers without the need to write codes. To learn more about Portainer.
Updating the Operating System Now, we have a secured connection with our instance, let&amp;rsquo;s update and upgrade the operating system. Updating and upgrading the operating system of the instance is always a good habit to have.</description>
    </item>
    
    <item>
      <title>Create a MySQL database using RDS</title>
      <link>https://omar2cloud.github.io/_template.en-copy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/_template.en-copy/</guid>
      <description>RDS | EC2 database program The objective of this tutorial is to create a MySQL database using RDS and access it using a custom Python script from an EC2 instance using an appropriate role.
Learning Outcomes:  Creating an EC2 instance using the 7 step workflow &amp;amp; SSH Creating a MySQL database using RDS (Use free-tier eligible options) Writing custom application and deploy onto EC2 Able to apply IAM roles to EC2 instance  What you do you need to complete the tutorial:  AWS Account Credentials EC2 Instances (Linux) Shell script environment (any text editor of your choice) Full access to - EC2, RDS, IAM  Step 1: Create Private MySQL Instance:  Ensure your region is set to &amp;ldquo;N Virginia&amp;rdquo; Create a private MySQL RDS: a)	Create a &amp;ldquo;Dev/Test&amp;rdquo; MySQL instance b)	Select &amp;ldquo;Non publicly&amp;rdquo; available DB c)	DB instance = &amp;ldquo;bluesky&amp;rdquo;, UID/PWD = root/password.</description>
    </item>
    
    <item>
      <title>Docker on Ubuntu Raspberry Pi 4</title>
      <link>https://omar2cloud.github.io/_template/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/_template/</guid>
      <description>Updating the Operating System Now, we have a secured connection with our instance, let&amp;rsquo;s update and upgrade the operating system. Updating and upgrading the operating system of the instance is always a good habit to have. We will run the following update/upgrade commands. The -y in the end of the command line will automatically enters &amp;ldquo;yes&amp;rdquo; as a confirmation before installing the updates.
sudo apt autoremoveA public folder will be generated, containing all static content and assets for your website.</description>
    </item>
    
    <item>
      <title>Install Unified CloudWatch Agent</title>
      <link>https://omar2cloud.github.io/aws/cloudwatch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/aws/cloudwatch/</guid>
      <description>Install Unified CloudWatch Agent: The unified CloudWatch agent. It enables you to collect both logs and advanced metrics with one agent. It offers support across operating systems, including servers running Windows Server. This agent also provides better performance. The older CloudWatch Logs agent, which supports the collection of logs from only servers running Linux. AWS strongly recommends migrating to the unified CloudWatch agent.
The unified CloudWatch agent enables you to do the following: 1- Collect more system-level metrics from Amazon EC2 instances across operating systems.</description>
    </item>
    
    <item>
      <title>Install x11vnc Server on Ubuntu 20.04 for Remote Access</title>
      <link>https://omar2cloud.github.io/rasp/x11vnc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/rasp/x11vnc/</guid>
      <description>What is a X11VNC Server? The Virtual Network Computing (VNC) allows to view and interact with devices remotely with any VNC viewer. When working with multiple RPIs, having VNC servers give us access all our RPIs from one device. There are many VNC servers and X11VNC is one of them. On another tutorial, we will install RealVNC, which is another vnc server, and I will go over the differences between X11VNC and RealVNC.</description>
    </item>
    
    <item>
      <title>install Mattermost and MySQL on EC2</title>
      <link>https://omar2cloud.github.io/aws/mattermost/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/aws/mattermost/</guid>
      <description>Mattermost Mattermost is an open-source, self-hostable online chat service with file sharing, search, and integrations. It is designed as an internal chat for organizations and companies, and mostly markets itself as an open-source alternative to Slack and Microsoft Teams. For information about Mattermost.
As part of this tutorial, we will install and configure MySQL on Ubuntu 20.04 LTS EC2 instance. The intension is implement two different subnets, Public and Private subnets.</description>
    </item>
    
    <item>
      <title>Install RealVNC Server on Ubuntu 20.04 for Remote Access</title>
      <link>https://omar2cloud.github.io/rasp/realvnc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/rasp/realvnc/</guid>
      <description>What is a RealVNC Server? RealVNC allows us to interact with our Raspberry Pis graphically via Virtual Network Computing (VNC). The RealVNC server comes preinstalled with the Raspberry Pi OS. It&amp;rsquo;s extremely secure, convenient and reliable. Until the moment of writing this tutorial, 5/15/2021, RealVNC allows us to have up to 5 subscribed devices to remote into via cloud connectivity for FREE. By using this feature, we can remote into our devices from anywhere in the world without a VPN, a port-forwarding or a firewall configuration.</description>
    </item>
    
    <item>
      <title>AWS Lambda Custom Layers and a Lambda Function in Python</title>
      <link>https://omar2cloud.github.io/aws/lambda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/aws/lambda/</guid>
      <description>What is AWS Lambda? AWS Lambda is a serverless compute service, which allow the user to run codes without provisioning or managing servers. With Lambda, the user does not manage runtimes nor admin the server. Utilizing Lambda is as simple as uploading a code in a ZIP file or a container image, and Lambda automatically allocates compute execution power and runs the code based on the incoming request or event. Lambda functions can be written in many flavors such as, Node.</description>
    </item>
    
    <item>
      <title>Setting UP RPI to Run Headless</title>
      <link>https://omar2cloud.github.io/rasp/headless/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/rasp/headless/</guid>
      <description>What is Headless? Headless is the term used when we run our RPI without a monitor or a keyboard. I like to setup and configure my RPI using a monitor at least for the first time only, but if we are hosting a server with no desktop GUI on a RPI, setting up headless is the way to go.
Please, refer to Raspberry Pi Foundation for information on how to setup RPI headless</description>
    </item>
    
    <item>
      <title>Application Load Balancer with Lambda Backend</title>
      <link>https://omar2cloud.github.io/aws/lambda_web/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/aws/lambda_web/</guid>
      <description>Application Load Balancer An Application Load Balancer has the ability to send traffic to a specific target group (TG) based on path. The default path is to send all the traffic to a given Target Group.. Usually a TG comprises of infrastructure components either on the cloud (EC2 instances) or from on-prem data-center (via IP).
However, there is an exciting feature by which the target group can contain a lambda function as the backend.</description>
    </item>
    
    <item>
      <title>Docker on Ubuntu 20.04 Raspberry Pi 4</title>
      <link>https://omar2cloud.github.io/rasp/rpidock/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/rasp/rpidock/</guid>
      <description>As of 11/25/21, if you were unable to install Docker on RPI-4 running Ubuntu 21.10, you may need to install extra kernel modules by running the following command $ sudo apt install linux-modules-extra-raspi
Updating the Operating System Now, we have a secured connection with our instance, let&amp;rsquo;s update and upgrade the operating system. Updating and upgrading the operating system of the instance is always a good habit to have.</description>
    </item>
    
    <item>
      <title>How To Reset My Portainer Password</title>
      <link>https://omar2cloud.github.io/rasp/psswd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/rasp/psswd/</guid>
      <description>Resetting Admin password in Portainer running as container Portainer does not have a password reset feature. We will have to you use a password container helper.
1- Firstly, we will stop the Portainer container.
docker container stop portainer2- We will run the helper using the same bind-mount/volume for the data volume
docker run --rm -v portainer_data:/data portainer/helper-reset-passwordThe response should be similar to the below.
2020/06/04 00:13:58 Password succesfully updated for user: admin2020/06/04 00:13:58 Use the following password to login: &amp;amp;_4#\3^5V8vLTd)E&amp;quot;NWiJBs26G*9HPl13- Finally, we will restart the Portainer container.</description>
    </item>
    
    <item>
      <title>Basic Docker Commands</title>
      <link>https://omar2cloud.github.io/rasp/docker-on-ec2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/rasp/docker-on-ec2/</guid>
      <description>Basic Commands of Docker The heart of the Docker echo system consists of two parameters: the images and the containers.
To list out the docker processors:
ps -ef | grep [d]ockerTo list out all images on the local machine:
docker imagesTo check for any running containers/processors:
docker ps -aDocker run reference - Foreground vs. Detached Foreground In foreground mode, docker run can start the process in the container and attach the console to the process’s standard input, output, and standard error.</description>
    </item>
    
    <item>
      <title>AWS DynamoDB on Raspberry Pi 4 Running Ubuntu 21.04</title>
      <link>https://omar2cloud.github.io/rasp/dynamodb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/rasp/dynamodb/</guid>
      <description>What Is Amazon DynamoDB? Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. With DynamoDB, we can create database tables that can store and retrieve any amount of data and serve any level of request traffic. In addition to the Amazon DynamoDB web service, AWS provides a downloadable version of DynamoDB that we can run on our computers and is perfect for development and testing of our code.</description>
    </item>
    
    <item>
      <title>Invoice Processing Application</title>
      <link>https://omar2cloud.github.io/aws/prj2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/aws/prj2/</guid>
      <description>Invoice Processing Application The Invoice Processing Application is to parse the content of the uploaded text format invoices to S3 bucket using a Python custom code running on a Ubuntu EC2 to convert them into CSV records. Once a record is processed, it will be saved in DynamoDB for retention and the converted CSV record is saved in S3 destination bucket. AWS Athena is to query the CSV records to aggregate expenses grouped by date.</description>
    </item>
    
    <item>
      <title>Docker Image on ECS Fargate</title>
      <link>https://omar2cloud.github.io/aws/prj3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/aws/prj3/</guid>
      <description>A Sample Web Application Containerized as a Docker image Deployed on AWS ECS Fargate In this tutorial, we will package and containerize a sample web application as a Docker image running on Apache Tomcat having JRE-8 as a runtime. Then, we will push this new Docker image to our public repository at Dockerhub. The web application, which is packaged into a Docker image will be deployed on AWS ECS Fargate cluster.</description>
    </item>
    
    <item>
      <title>GitLab Runner on RPI-4 (Build, Push Docker images to Docker Hub using GitLab Runner on GitLab)</title>
      <link>https://omar2cloud.github.io/rasp/gitlab_runner/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/rasp/gitlab_runner/</guid>
      <description>What is GitLab Runner GitLab Runner is an agent that runs GitLab CI/CD (Continues Integration/Continuous Deployment) jobs in a pipeline. It&amp;rsquo;s heavily utilized in the world of DevOps to provision and configure infrastructure. The GitLab Runner can be installed as a binary on Linux, MacOS or Windows. It can also be installed as a container.
On this tutorial, I will walk through installing and configuring GitLab Runner as a container using a Docker image on a RPI-4.</description>
    </item>
    
    <item>
      <title>Archetypes</title>
      <link>https://omar2cloud.github.io/cont/archetypes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/cont/archetypes/</guid>
      <description>Using the command: hugo new [relative new content path], you can start a content file with the date and title automatically set. While this is a welcome feature, active writers need more: archetypes.
It is pre-configured skeleton pages with default front matter. Please refer to the documentation for types of page to understand the differences.
Chapter To create a Chapter page, run the following commands
hugo new --kind chapter &amp;lt;name&amp;gt;/_index.mdIt will create a page with predefined Front-Matter:</description>
    </item>
    
    <item>
      <title>Image Analysis with AWS Rekognition</title>
      <link>https://omar2cloud.github.io/aws/rekognition/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/aws/rekognition/</guid>
      <description>AWS Rekognition Amazon Rekognition is part of AWS cognitive services, which requires no machine learning expertise to use. It&amp;rsquo;s a simple way to analysis images and videos for any application using proven record of high scalability and deep learning technology. Rekognition technology is utilized to identify and detect objects, shapes, people, texts, and activities in media contents. For more about Amazon Rekognition.
In this tutorial, we will explore the important aspect of AWS Rekognition and practically detect people and text on sample picture and video utilizing boto3 - AWS Python library.</description>
    </item>
    
    <item>
      <title>Create a Simple AWS CodePipeline from S3</title>
      <link>https://omar2cloud.github.io/aws/codepipeline/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/aws/codepipeline/</guid>
      <description>AWS CodePipeline AWS CodePipeline is a continuous delivery service offered by AWS to model, visualize, and automate the release of applications. This service allows for rapid modeling and configuring of different steps of an application release process. It automates the necessary process of change of application deployment. For information about AWS CodePipeline.
Learning Outcomes and Tutorial Scenario: In this tutorial, we will create a two-stage pipeline that uses a versioned S3 bucket and CodeDeploy to release a sample application.</description>
    </item>
    
    <item>
      <title>Create a Static Sample Website on S3 Utilizing AWS CloudFormation</title>
      <link>https://omar2cloud.github.io/aws/s3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/aws/s3/</guid>
      <description>AWS S3 Hosted Website: The objective of tutorial is to host a sample static website on AWS S3, obtain a free domain name from Freenom and assign it to the S3 website and utilize AWS Route 53 as DNS hosting provider. Moreover, an AWS CloudFront distribution is employed to serve the website over AWS&amp;rsquo;s fast content network service with low latency and Lambda@Edge is to add security headers to all web server responses.</description>
    </item>
    
    <item>
      <title>Create a Terraform Template to Spin EC2 Instance from a RaspberryPi 4</title>
      <link>https://omar2cloud.github.io/aws/terraform/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/aws/terraform/</guid>
      <description>What is Terraform? Terraform is an Infrastructure as a Code - IaaC- service. It is a tool for building, changing, and versioning infrastructure safely and efficiently. Terraform can manage existing and popular service providers as well as custom in-house solutions. For more information about Terraform.
During this tutorial, we will create a sample Terraform template to spin an AWS EC2 instance from the Command Line Interface (CLI) on a Raspberry Pi 4.</description>
    </item>
    
    <item>
      <title>Markdown syntax</title>
      <link>https://omar2cloud.github.io/cont/markdown/</link>
      <pubDate>Sat, 09 Apr 2016 16:50:16 +0200</pubDate>
      
      <guid>https://omar2cloud.github.io/cont/markdown/</guid>
      <description>This page is a shameful copy of the great Grav original page. Only difference is information about image customization (resizing, add CSS classes&amp;hellip;)
Let&amp;rsquo;s face it: Writing content for the Web is tiresome. WYSIWYG editors help alleviate this task, but they generally result in horrible code, or worse yet, ugly web pages.
Markdown is a better way to write HTML, without all the complexities and ugliness that usually accompanies it.</description>
    </item>
    
    <item>
      <title>Code highlighting</title>
      <link>https://omar2cloud.github.io/cont/syntaxhighlight/</link>
      <pubDate>Mon, 01 Jun 2020 13:31:12 +0100</pubDate>
      
      <guid>https://omar2cloud.github.io/cont/syntaxhighlight/</guid>
      <description>Learn theme uses highlight.js to provide code syntax highlighting.
Markdown syntax Wrap the code block with three backticks and the name of the language. Highlight will try to auto detect the language if one is not provided.
```json [ { &amp;#34;title&amp;#34;: &amp;#34;apples&amp;#34;, &amp;#34;count&amp;#34;: [12000, 20000], &amp;#34;description&amp;#34;: {&amp;#34;text&amp;#34;: &amp;#34;...&amp;#34;, &amp;#34;sensitive&amp;#34;: false} }, { &amp;#34;title&amp;#34;: &amp;#34;oranges&amp;#34;, &amp;#34;count&amp;#34;: [17500, null], &amp;#34;description&amp;#34;: {&amp;#34;text&amp;#34;: &amp;#34;...&amp;#34;, &amp;#34;sensitive&amp;#34;: false} } ] ``` Renders to:
[ { &amp;#34;title&amp;#34;: &amp;#34;apples&amp;#34;, &amp;#34;count&amp;#34;: [12000, 20000], &amp;#34;description&amp;#34;: {&amp;#34;text&amp;#34;: &amp;#34;.</description>
    </item>
    
    <item>
      <title>Menu extra shortcuts</title>
      <link>https://omar2cloud.github.io/cont/menushortcuts/</link>
      <pubDate>Sat, 09 Apr 2016 16:50:16 +0200</pubDate>
      
      <guid>https://omar2cloud.github.io/cont/menushortcuts/</guid>
      <description>You can define additional menu entries or shortcuts in the navigation menu without any link to content.
Basic configuration Edit the website configuration config.toml and add a [[menu.shortcuts]] entry for each link your want to add.
Example from the current website:
[[menu.shortcuts]] name = &amp;quot;&amp;lt;i class=&#39;fab fa-github&#39;&amp;gt;&amp;lt;/i&amp;gt; Github repo&amp;quot;identifier = &amp;quot;ds&amp;quot;url = &amp;quot;https://github.com/matcornic/hugo-theme-learn&amp;quot;weight = 10[[menu.shortcuts]]name = &amp;quot;&amp;lt;i class=&#39;fas fa-camera&#39;&amp;gt;&amp;lt;/i&amp;gt; Showcases&amp;quot;url = &amp;quot;/showcase&amp;quot;weight = 11[[menu.</description>
    </item>
    
    <item>
      <title>Icons and logos</title>
      <link>https://omar2cloud.github.io/cont/icons/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/cont/icons/</guid>
      <description>The Learn theme for Hugo loads the Font Awesome library, allowing you to easily display any icon or logo available in the Font Awesome free collection.
Finding an icon Browse through the available icons in the Font Awesome Gallery. Notice that the free filter is enabled, as only the free icons are available by default.
Once on the Font Awesome page for a specific icon, for example the page for the heart, copy the HTML reference and paste into the markdown content.</description>
    </item>
    
    <item>
      <title>Tags</title>
      <link>https://omar2cloud.github.io/cont/tags/</link>
      <pubDate>Thu, 29 Nov 2018 08:41:44 +0100</pubDate>
      
      <guid>https://omar2cloud.github.io/cont/tags/</guid>
      <description>Learn theme support one default taxonomy of gohugo: the tag feature.
Configuration Just add tags to any page:
--- date: 2018-11-29T08:41:44+01:00 title: Theme tutorial weight: 15 tags: [&amp;#34;tutorial&amp;#34;, &amp;#34;theme&amp;#34;] --- Behavior The tags are displayed at the top of the page, in their insertion order.
Each tag is a link to a Taxonomy page displaying all the articles with the given tag.
List all the tags In the config.toml file you can add a shortcut to display all the tags</description>
    </item>
    
    <item>
      <title></title>
      <link>https://omar2cloud.github.io/rasp/_wprpi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/rasp/_wprpi/</guid>
      <description>What is WordPress? WordPress is an open source software, which is widely used to create a beautiful website, blog, or app. To learn more about Wordpress.
We will install Wordpress as a Docker image using Portainer. The most interesting part is we will install WP as a stack including MySQL database using Docker-Compose stack.
version: &#39;2&#39;services:db:image: mysql/mysql-server:latestvolumes:- db_data:/var/lib/mysqlrestart: alwaysenvironment:MYSQL_ROOT_PASSWORD: ${MYSQL_DATABASE_PASSWORD}MYSQL_DATABASE: wordpressMYSQL_USER: wordpressMYSQL_PASSWORD: wordpresswordpress:image: wordpress:latestports:- 8095:80restart: alwaysenvironment:WORDPRESS_DB_HOST: db:3306WORDPRESS_DB_USER: wordpressWORDPRESS_DB_PASSWORD: wordpressvolumes:db_data:</description>
    </item>
    
    <item>
      <title></title>
      <link>https://omar2cloud.github.io/rasp/pi/_grafana/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/rasp/pi/_grafana/</guid>
      <description>What is Grafana? Grafana is an open source visualization, analytics and alerting platform. It turns time series database data into well designed graphs for visualizations on dashboards.
To learn more about Grafana.
Part 3: Install Grafana: 1- Installing Grafana from the APT repository allows it to automatically get updated when apt-get update is ran. Let&amp;rsquo;s install the latest OSS release:
sudo apt-get install -y apt-transport-httpssudo apt-get install -y software-properties-common wgetwget -q -O - https://packages.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://omar2cloud.github.io/rasp/pi/_influxdb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/rasp/pi/_influxdb/</guid>
      <description>What is InfluxDB? InfluxDB is a time series database. It&amp;rsquo;s engineered to build IoT, analytics and monitoring. It is built to ingest millions of data points per second produced by sensors, systems, applications and infrastructure. By the end of this tutorial, we would have installed InfluxDB to monitor our Raspberry Pi 4 system&amp;rsquo;s metrics such as CPU, Disk space and memory.
To learn more about InfluxDB.
Part 1: Install InfluxDB 2.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://omar2cloud.github.io/rasp/pi/_telegraf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/rasp/pi/_telegraf/</guid>
      <description>What is Telegraf? Telegraf is an open source server agent written in Go. It is built to collect metrics from a wide array of inputs and write them into a wide array of outputs.
To learn more about Telegraf.
Part 2: Install Telegraf: 1- We will install the latest version of Telegraf using the ap-get package manager. Firstly, let&amp;rsquo;s add the InfluxData repository by running the following commands (you could copy and paste all commands at once on the terminal, or one line at a time):</description>
    </item>
    
    <item>
      <title>Attachments</title>
      <link>https://omar2cloud.github.io/shortcodes/attachments/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/shortcodes/attachments/</guid>
      <description>The Attachments shortcode displays a list of files attached to a page.
AttachmentsBachGavotteShort.mp3(357 kb)Carroll_AliceAuPaysDesMerveilles.pdf(175 kb)adivorciarsetoca00cape.pdf(361 kb)hugo.png(17 kb)movieselectricsheep-flock-244-32500-2.mp4(340 kb)Usage The shortcurt lists files found in a specific folder. Currently, it support two implementations for pages
  If your page is a markdown file, attachements must be placed in a folder named like your page and ending with .</description>
    </item>
    
    <item>
      <title>Button</title>
      <link>https://omar2cloud.github.io/shortcodes/button/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/shortcodes/button/</guid>
      <description>A button is a just a clickable button with optional icon.
{{% button href=&amp;quot;https://getgrav.org/&amp;quot; %}}Get Grav{{% /button %}}{{% button href=&amp;quot;https://getgrav.org/&amp;quot; icon=&amp;quot;fas fa-download&amp;quot; %}}Get Grav with icon{{% /button %}}{{% button href=&amp;quot;https://getgrav.org/&amp;quot; icon=&amp;quot;fas fa-download&amp;quot; icon-position=&amp;quot;right&amp;quot; %}}Get Grav with icon right{{% /button %}}Get GravGet Grav with iconGet Grav with icon right</description>
    </item>
    
    <item>
      <title>Credits</title>
      <link>https://omar2cloud.github.io/credits/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/credits/</guid>
      <description>Contributors Thanks to them for making Open Source Software a better place !
And a special thanks to @vjeantet for his work on docdock, a fork of hugo-theme-learn. v2.0.0 of this theme is inspired by his work.
Packages and libraries  mermaid - generation of diagram and flowchart from text in a similar manner as markdown font awesome - the iconic font and CSS framework jQuery - The Write Less, Do More, JavaScript Library lunr - Lunr enables you to provide a great search experience without the need for external, server-side, search services&amp;hellip; horsey - Progressive and customizable autocomplete component clipboard.</description>
    </item>
    
    <item>
      <title>Expand</title>
      <link>https://omar2cloud.github.io/shortcodes/expand/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/shortcodes/expand/</guid>
      <description>The Expand shortcode displays an expandable/collapsible section of text on your page. Here is an example
Expand me...Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</description>
    </item>
    
    <item>
      <title>Learning with Omar</title>
      <link>https://omar2cloud.github.io/shortcodes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/shortcodes/</guid>
      <description>/*this page is a copy of the original index */
Omar&amp;rsquo;s Tutorials There are thousdands and thousands
Let&amp;rsquo;s take this journey and learn together.
This theme is a partial porting of the Learn theme of Grav,
Learn theme works with a page tree structure to organize content : All contents are pages, which belong to other pages. read more about this
Main features  Automatic Search Multilingual mode Unlimited menu levels Automatic next/prev buttons to navigate through menu entries Image resizing, shadow&amp;hellip; Attachments files List child pages Mermaid diagram (flowchart, sequence, gantt) Customizable look and feel and themes variants Buttons, Tip/Note/Info/Warning boxes, Expand  Contribute to this documentation Feel free to update this content, just click the Edit this page link displayed on top right of each page, and pullrequest it</description>
    </item>
    
    <item>
      <title>Mermaid</title>
      <link>https://omar2cloud.github.io/shortcodes/mermaid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/shortcodes/mermaid/</guid>
      <description>Mermaid is a library helping you to generate diagram and flowcharts from text, in a similar manner as Markdown.
Just insert your mermaid code in the mermaid shortcode and that&amp;rsquo;s it.
Flowchart example {{&amp;lt;mermaid align=&amp;quot;left&amp;quot;&amp;gt;}}graph LR;A[Hard edge] --&amp;gt;|Link text| B(Round edge)B --&amp;gt; C{Decision}C --&amp;gt;|One| D[Result one]C --&amp;gt;|Two| E[Result two]{{&amp;lt; /mermaid &amp;gt;}} renders as
graph LR;A[Hard edge] --|Link text| B(Round edge)B -- C{Decision}C --|One| D[Result one]C --|Two| E[Result two]Sequence example {{&amp;lt; mermaid &amp;gt;}}sequenceDiagramparticipant Aliceparticipant BobAlice-&amp;gt;&amp;gt;John: Hello John, how are you?</description>
    </item>
    
    <item>
      <title>Notice</title>
      <link>https://omar2cloud.github.io/shortcodes/notice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/shortcodes/notice/</guid>
      <description>The notice shortcode shows 4 types of disclaimers to help you structure your page.
Note {{% notice note %}}A notice disclaimer{{% /notice %}}renders as
A notice disclaimer
Info {{% notice info %}}An information disclaimer{{% /notice %}}renders as
An information disclaimer
Tip {{% notice tip %}}A tip disclaimer{{% /notice %}}renders as
A tip disclaimer
Warning {{% notice warning %}}A warning disclaimer{{% /notice %}}renders as</description>
    </item>
    
    <item>
      <title>page test</title>
      <link>https://omar2cloud.github.io/shortcodes/children/test/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/shortcodes/children/test/</guid>
      <description>This is a test demo child page</description>
    </item>
    
    <item>
      <title>page test</title>
      <link>https://omar2cloud.github.io/shortcodes/children/test.fr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/shortcodes/children/test.fr/</guid>
      <description>Ceci est une page de demo</description>
    </item>
    
    <item>
      <title>page test 3</title>
      <link>https://omar2cloud.github.io/shortcodes/children/children-2/test3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/shortcodes/children/children-2/test3/</guid>
      <description>This is a test 3 demo child page</description>
    </item>
    
    <item>
      <title>page test 3</title>
      <link>https://omar2cloud.github.io/shortcodes/children/children-2/test3.fr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/shortcodes/children/children-2/test3.fr/</guid>
      <description>Ceci est une page de demo test 3</description>
    </item>
    
    <item>
      <title>Showcase</title>
      <link>https://omar2cloud.github.io/showcase/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/showcase/</guid>
      <description>TAT by OVH Tshark.dev by Ross Jacobs inteliver by Amir Lavasani </description>
    </item>
    
    <item>
      <title>Site param</title>
      <link>https://omar2cloud.github.io/shortcodes/siteparam/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/shortcodes/siteparam/</guid>
      <description>siteparam shortcode is used to help you print values of site params.
For instance, in this current site, the editURL variable is used in config.toml
[params] editURL = &amp;#34;https://github.com/matcornic/hugo-theme-learn/edit/master/exampleSite/content/&amp;#34; Use the siteparam shortcode to display its value.
`editURL` Value : {{% siteparam &amp;quot;editURL&amp;quot; %}}is displayed as
editURL Value :</description>
    </item>
    
  </channel>
</rss>
