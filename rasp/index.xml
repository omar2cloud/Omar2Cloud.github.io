<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Raspberry Pi Tutorials on Learn With Omar</title>
    <link>https://omar2cloud.github.io/rasp/</link>
    <description>Recent content in Raspberry Pi Tutorials on Learn With Omar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://omar2cloud.github.io/rasp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>My First Raspberry Pi</title>
      <link>https://omar2cloud.github.io/rasp/myrasp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/rasp/myrasp/</guid>
      <description>What is Raspberry Pi (RPI)? The Raspberry Pi is a small single-board computer capable of doing almost everything that an ordinary Linux-based computer can do. Once it connects to an HDMI display, a keyboard, and a mouse, we have have a fully functional computer for a pice of $35 (or even way less for the Raspberry Pi Zero). The Raspberry Pi is widely known and used for home lab environments, where anyone can experiment safely.</description>
    </item>
    
    <item>
      <title>How to Remote into Ubuntu</title>
      <link>https://omar2cloud.github.io/rasp/vino/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/rasp/vino/</guid>
      <description>What is a Virtual Network Computing (VNC)? VNC is a graphical desktop sharing system that allows you to remotely control the desktop interface from another computer or mobile device (running VNC Viewer). VNC Viewer transmits the keyboard and the mouse events to VNC Server, and receives updates to the screen in return. Setting up a VNC Server on our RPI 4 is very beneficial to gain access to it from another device.</description>
    </item>
    
    <item>
      <title>Install x11vnc Server on Ubuntu 20.04 for Remote Access</title>
      <link>https://omar2cloud.github.io/rasp/x11vnc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/rasp/x11vnc/</guid>
      <description>What is a X11VNC Server? The Virtual Network Computing (VNC) allows to view and interact with devices remotely with any VNC viewer. When working with multiple RPIs, having VNC servers give us access all our RPIs from one device. There are many VNC servers and X11VNC is one of them. On another tutorial, we will install RealVNC, which is another vnc server, and I will go over the differences between X11VNC and RealVNC.</description>
    </item>
    
    <item>
      <title>Install RealVNC Server on Ubuntu 20.04 for Remote Access</title>
      <link>https://omar2cloud.github.io/rasp/realvnc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/rasp/realvnc/</guid>
      <description>What is a RealVNC Server? RealVNC allows us to interact with our Raspberry Pis graphically via Virtual Network Computing (VNC). The RealVNC server comes preinstalled with the Raspberry Pi OS. It&amp;rsquo;s extremely secure, convenient and reliable. Until the moment of writing this tutorial, 5/15/2021, RealVNC allows us to have up to 5 subscribed devices to remote into via cloud connectivity for FREE. By using this feature, we can remote into our devices from anywhere in the world without a VPN, a port-forwarding or a firewall configuration.</description>
    </item>
    
    <item>
      <title>Setting UP RPI to Run Headless</title>
      <link>https://omar2cloud.github.io/rasp/headless/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/rasp/headless/</guid>
      <description>What is Headless? Headless is the term used when we run our RPI without a monitor or a keyboard. I like to setup and configure my RPI using a monitor at least for the first time only, but if we are hosting a server with no desktop GUI on a RPI, setting up headless is the way to go.
Please, refer to Raspberry Pi Foundation for information on how to setup RPI headless</description>
    </item>
    
    <item>
      <title>Docker on Ubuntu 20.04 Raspberry Pi 4</title>
      <link>https://omar2cloud.github.io/rasp/rpidock/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/rasp/rpidock/</guid>
      <description>As of 11/25/21, if you were unable to install Docker on RPI-4 running Ubuntu 21.10, you may need to install extra kernel modules by running the following command $ sudo apt install linux-modules-extra-raspi
Updating the Operating System Now, we have a secured connection with our instance, let&amp;rsquo;s update and upgrade the operating system. Updating and upgrading the operating system of the instance is always a good habit to have.</description>
    </item>
    
    <item>
      <title>How To Reset My Portainer Password</title>
      <link>https://omar2cloud.github.io/rasp/psswd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/rasp/psswd/</guid>
      <description>Resetting Admin password in Portainer running as container Portainer does not have a password reset feature. We will have to you use a password container helper.
1- Firstly, we will stop the Portainer container.
docker container stop portainer2- We will run the helper using the same bind-mount/volume for the data volume
docker run --rm -v portainer_data:/data portainer/helper-reset-passwordThe response should be similar to the below.
2020/06/04 00:13:58 Password succesfully updated for user: admin2020/06/04 00:13:58 Use the following password to login: &amp;amp;_4#\3^5V8vLTd)E&amp;quot;NWiJBs26G*9HPl13- Finally, we will restart the Portainer container.</description>
    </item>
    
    <item>
      <title>Basic Docker Commands</title>
      <link>https://omar2cloud.github.io/rasp/docker-on-ec2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/rasp/docker-on-ec2/</guid>
      <description>Basic Commands of Docker The heart of the Docker echo system consists of two parameters: the images and the containers.
To list out the docker processors:
ps -ef | grep [d]ockerTo list out all images on the local machine:
docker imagesTo check for any running containers/processors:
docker ps -aDocker run reference - Foreground vs. Detached Foreground In foreground mode, docker run can start the process in the container and attach the console to the processâ€™s standard input, output, and standard error.</description>
    </item>
    
    <item>
      <title>AWS DynamoDB on Raspberry Pi 4 Running Ubuntu 21.04</title>
      <link>https://omar2cloud.github.io/rasp/dynamodb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/rasp/dynamodb/</guid>
      <description>What Is Amazon DynamoDB? Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. With DynamoDB, we can create database tables that can store and retrieve any amount of data and serve any level of request traffic. In addition to the Amazon DynamoDB web service, AWS provides a downloadable version of DynamoDB that we can run on our computers and is perfect for development and testing of our code.</description>
    </item>
    
    <item>
      <title>GitLab Runner on RPI-4 (Build, Push Docker images to Docker Hub using GitLab Runner on GitLab)</title>
      <link>https://omar2cloud.github.io/rasp/gitlab_runner/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://omar2cloud.github.io/rasp/gitlab_runner/</guid>
      <description>What is GitLab Runner GitLab Runner is an agent that runs GitLab CI/CD (Continues Integration/Continuous Deployment) jobs in a pipeline. It&amp;rsquo;s heavily utilized in the world of DevOps to provision and configure infrastructure. The GitLab Runner can be installed as a binary on Linux, MacOS or Windows. It can also be installed as a container.
On this tutorial, I will walk through installing and configuring GitLab Runner as a container using a Docker image on a RPI-4.</description>
    </item>
    
  </channel>
</rss>
